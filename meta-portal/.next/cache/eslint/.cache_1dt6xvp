[{"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\404.js":"1","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\api\\hello.js":"2","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\App.js":"3","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\blog.js":"4","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\collection.js":"5","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\index.js":"6","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\nft\\[id].js":"7","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\_app.js":"8","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\_document.js":"9","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\About.js":"10","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\Collection.js":"11","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\Contact.js":"12","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\Counter.js":"13","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\FunFacts.js":"14","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\HeroSlider.js":"15","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\News.js":"16","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\popup\\ImageView.js":"17","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\popup\\VideoPopup.js":"18","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\RoadMapStep.js":"19","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\SectionDivider.js":"20","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Footer.js":"21","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Header.js":"22","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Layout.js":"23","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\MobileNavigation.js":"24","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Navigation.js":"25","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\PageBanner.js":"26","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\PreLoader.js":"27","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\ScrollTop.js":"28","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Searchbox.js":"29","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\SearchButton.js":"30","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Social.js":"31","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\WalletPopUp.js":"32","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\ParticlesBackground.js":"33","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\actions\\nfts.js":"34","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\actions\\siteSettings.js":"35","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\actions\\type.js":"36","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\reducer\\index.js":"37","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\reducer\\nfts.js":"38","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\reducer\\siteSettings.js":"39","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\store.js":"40","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\sliderProps.js":"41","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\useClickOutside.js":"42","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\utilits.js":"43"},{"size":1081,"mtime":1709544972888,"results":"44","hashOfConfig":"45"},{"size":175,"mtime":1709544972889,"results":"46","hashOfConfig":"45"},{"size":780,"mtime":1709544972889,"results":"47","hashOfConfig":"45"},{"size":5646,"mtime":1709544972893,"results":"48","hashOfConfig":"45"},{"size":2607,"mtime":1709544972894,"results":"49","hashOfConfig":"45"},{"size":1298,"mtime":1709544972894,"results":"50","hashOfConfig":"45"},{"size":15531,"mtime":1709544972895,"results":"51","hashOfConfig":"45"},{"size":1101,"mtime":1709544972889,"results":"52","hashOfConfig":"45"},{"size":236,"mtime":1709544972889,"results":"53","hashOfConfig":"45"},{"size":7262,"mtime":1709544973270,"results":"54","hashOfConfig":"45"},{"size":5900,"mtime":1709544973270,"results":"55","hashOfConfig":"45"},{"size":3222,"mtime":1709544973270,"results":"56","hashOfConfig":"45"},{"size":653,"mtime":1709544973271,"results":"57","hashOfConfig":"45"},{"size":446,"mtime":1709544973271,"results":"58","hashOfConfig":"45"},{"size":18665,"mtime":1709544973271,"results":"59","hashOfConfig":"45"},{"size":4243,"mtime":1709544973272,"results":"60","hashOfConfig":"45"},{"size":1877,"mtime":1709544973273,"results":"61","hashOfConfig":"45"},{"size":2182,"mtime":1709544973273,"results":"62","hashOfConfig":"45"},{"size":8427,"mtime":1709544973272,"results":"63","hashOfConfig":"45"},{"size":297,"mtime":1709544973272,"results":"64","hashOfConfig":"45"},{"size":605,"mtime":1709544973274,"results":"65","hashOfConfig":"45"},{"size":3519,"mtime":1709547481697,"results":"66","hashOfConfig":"45"},{"size":1967,"mtime":1709544973274,"results":"67","hashOfConfig":"45"},{"size":1912,"mtime":1709544973275,"results":"68","hashOfConfig":"45"},{"size":3759,"mtime":1709547568061,"results":"69","hashOfConfig":"45"},{"size":976,"mtime":1709544973276,"results":"70","hashOfConfig":"45"},{"size":527,"mtime":1709544973276,"results":"71","hashOfConfig":"45"},{"size":517,"mtime":1709544973276,"results":"72","hashOfConfig":"45"},{"size":921,"mtime":1709544973277,"results":"73","hashOfConfig":"45"},{"size":524,"mtime":1709544973276,"results":"74","hashOfConfig":"45"},{"size":1033,"mtime":1709544973277,"results":"75","hashOfConfig":"45"},{"size":2502,"mtime":1709544973277,"results":"76","hashOfConfig":"45"},{"size":5022,"mtime":1709544973269,"results":"77","hashOfConfig":"45"},{"size":560,"mtime":1709544973278,"results":"78","hashOfConfig":"45"},{"size":385,"mtime":1709544973278,"results":"79","hashOfConfig":"45"},{"size":212,"mtime":1709544973279,"results":"80","hashOfConfig":"45"},{"size":157,"mtime":1709544973279,"results":"81","hashOfConfig":"45"},{"size":410,"mtime":1709544973280,"results":"82","hashOfConfig":"45"},{"size":600,"mtime":1709544973280,"results":"83","hashOfConfig":"45"},{"size":398,"mtime":1709544973280,"results":"84","hashOfConfig":"45"},{"size":2639,"mtime":1709544973282,"results":"85","hashOfConfig":"45"},{"size":484,"mtime":1709544973283,"results":"86","hashOfConfig":"45"},{"size":6983,"mtime":1709544973283,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"1rpv2e0",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\404.js",["233"],[],"import Layout from \"../src/layout/Layout\";\r\nconst E404 = () => {\r\n  return (\r\n    <Layout pageTitle={\"404 Not Found\"}>\r\n      <div className=\"metaportal_fn_404\">\r\n        <div className=\"container small\">\r\n          <div className=\"message_holder\">\r\n            <h3 className=\"fn__gradient_title\">404</h3>\r\n            <h4\r\n              className=\"fn__maintitle\"\r\n              data-text=\"Page Not Found\"\r\n              data-align=\"center\"\r\n            >\r\n              Page Not Found\r\n            </h4>\r\n            <p>\r\n              Sorry, but the page you are looking for was moved, removed,\r\n              renamed or might never existed...\r\n            </p>\r\n            <div className=\"container-custom\">\r\n              <form>\r\n                <input name=\"s\" type=\"text\" />\r\n                <a href=\"#\" className=\"metaportal_fn_button\">\r\n                  <img src=\"/svg/loupe.svg\" alt=\"\" className=\"fn__svg\" />\r\n                </a>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default E404;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\api\\hello.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\App.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\blog.js",["234","235","236","237"],[],"import Link from \"next/link\";\r\nimport Layout from \"../src/layout/Layout\";\r\nimport PageBanner from \"../src/layout/PageBanner\";\r\nconst Blog = () => {\r\n  return (\r\n    <Layout pageTitle={\"Blog\"}>\r\n      <PageBanner pageName={\"Blog Articles\"} />\r\n\r\n      <div className=\"metaportal_fn_bloglist\">\r\n        <div className=\"container small\">\r\n          <div className=\"bloglist\">\r\n            <ul className=\"fn-isotope\">\r\n              <li className=\"isotope-item\">\r\n                <div className=\"blog__item\">\r\n                  <div className=\"counter\">\r\n                    <span className=\"cc\">\r\n                      <span>01</span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"meta\">\r\n                    <p>August 09, 2022 / Digital Revolution</p>\r\n                  </div>\r\n                  <div className=\"title\">\r\n                    <h3>\r\n                      <Link href=\"https://egfound.org/projects/digital-revolution-technology-power-you/?gclid=Cj0KCQjwi7GnBhDXARIsAFLvH4k3cvV5p9VLae9vjysUOlKjnLjNthpi3wSUrgziIT4LBPO8-Rbs3jIaAtZpEALw_wcB\">\r\n                        Technology, Power, & You\r\n                      </Link>\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"image\">\r\n                    <Link href=\"https://egfound.org/projects/digital-revolution-technology-power-you/?gclid=Cj0KCQjwi7GnBhDXARIsAFLvH4k3cvV5p9VLae9vjysUOlKjnLjNthpi3wSUrgziIT4LBPO8-Rbs3jIaAtZpEALw_wcB\">\r\n\r\n                      <img src=\"/img/blog/a1.jpg\" alt=\"\" />\r\n\r\n                    </Link>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </li>\r\n              <li className=\"isotope-item\">\r\n                <div className=\"blog__item\">\r\n                  <div className=\"counter\">\r\n                    <span className=\"cc\">\r\n                      <span>02</span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"meta\">\r\n                    <p>ARTIFICIAL INTELLIGENCE, BIG DATA, SECURITY</p>\r\n                  </div>\r\n                  <div className=\"title\">\r\n                    <h3>\r\n                      <Link href=\"https://www.cigionline.org/articles/cyber-security-battlefield/?utm_source=google_ads&utm_medium=grant&gclid=Cj0KCQjwi7GnBhDXARIsAFLvH4nryZ78BZEvLDfkR6qPuhMsmmPuh2p-J9hbnrRhKlfSHUzGDqtADEUaAiuREALw_wcB\">\r\n                        AI and Cyber Security\r\n                      </Link>\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"image\">\r\n                    <Link href=\"https://www.cigionline.org/articles/cyber-security-battlefield/?utm_source=google_ads&utm_medium=grant&gclid=Cj0KCQjwi7GnBhDXARIsAFLvH4nryZ78BZEvLDfkR6qPuhMsmmPuh2p-J9hbnrRhKlfSHUzGDqtADEUaAiuREALw_wcB\">\r\n\r\n                      <img src=\"/img/blog/A2.jpg\" alt=\"\" />\r\n\r\n                    </Link>\r\n                  </div>\r\n                 \r\n                </div>\r\n              </li>\r\n              <li className=\"isotope-item\">\r\n                <div className=\"blog__item\">\r\n                  <div className=\"counter\">\r\n                    <span className=\"cc\">\r\n                      <span>03</span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"meta\">\r\n                    <p>ARTIFICIAL INTELLIGENCE</p>\r\n                  </div>\r\n                  <div className=\"title\">\r\n                    <h3>\r\n                      <Link href=\"https://spectrum.ieee.org/analog-ai-ibm\">\r\n                        \r\n                        IBM’S AI Chip May Find Use in Generative AI\r\n                        \r\n                      </Link>\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"image\">\r\n                    <Link href=\"https://spectrum.ieee.org/analog-ai-ibm\">\r\n\r\n                      <img src=\"/img/blog/A4.jpg\" alt=\"\" />\r\n\r\n                    </Link>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </li>\r\n              <li className=\"isotope-item\">\r\n                <div className=\"blog__item\">\r\n                  <div className=\"counter\">\r\n                    <span className=\"cc\">\r\n                      <span>04</span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"meta\">\r\n                    <p>ARTIFICIAL INTELLIGENCE</p>\r\n                  </div>\r\n                  <div className=\"title\">\r\n                    <h3>\r\n                      <Link href=\"https://spectrum.ieee.org/side-channel-attack\">\r\n                        This AI Can Tell What You’re Typing Based on the Sound\r\n                      </Link>\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"image\">\r\n                    <Link href=\"https://spectrum.ieee.org/side-channel-attack\">\r\n\r\n                      <img src=\"/img/blog/A3.jpg\" alt=\"\" />\r\n\r\n                    </Link>\r\n                  </div>\r\n                 \r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"metaportal_fn_pagination\">\r\n            <ul>\r\n              <li>\r\n                <span>1</span>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">2</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">3</a>\r\n              </li>\r\n              <li>\r\n                <span>...</span>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\">77</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Blog;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\collection.js",["238","239"],[],"import Link from \"next/link\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Layout from \"../src/layout/Layout\";\r\nimport PageBanner from \"../src/layout/PageBanner\";\r\nimport { getNfts } from \"../src/redux/actions/nfts\";\r\nconst Collection = ({ getNfts, nfts }) => {\r\n  useEffect(() => {\r\n    getNfts();\r\n  }, []);\r\n  const getSplitData = (type) => {\r\n    return type.split(\" \").join(\"-\");\r\n  };\r\n  return (\r\n    <Layout pageTitle={\"Collection\"}>\r\n      <PageBanner pageName={\"Collection\"} />\r\n\r\n      {/* Collection Page */}\r\n      <div className=\"metaportal_fn_collectionpage\">\r\n        <div className=\"container\">\r\n          <div className=\"metaportal_fn_collection\">\r\n            {/* Filters */}\r\n\r\n            {/* !Filters */}\r\n            <div className=\"metaportal_fn_clist\">\r\n              {/* Result Box */}\r\n\r\n              {/* !Result Box */}\r\n              {/* Result List */}\r\n              <div className=\"metaportal_fn_result_list\">\r\n                <div className=\"metaportal_fn_drops\">\r\n                  <ul className=\"grid\">\r\n                    {nfts &&\r\n                      nfts.map((nft, i) => (\r\n                        <li\r\n                          className={\r\n                            getSplitData(nft.type) +\r\n                            \" \" +\r\n                            getSplitData(nft.special) +\r\n                            \" \" +\r\n                            getSplitData(nft.clothing)\r\n                          }\r\n                          key={i}\r\n                        >\r\n                          <div className=\"nft__item\">\r\n                            <div className=\"img_holder\">\r\n                              <img src={nft.image} alt=\"\" />\r\n                              <Link href={`/nft/${nft.id}`} className=\"full_link\">\r\n\r\n                              </Link>\r\n                            </div>\r\n                            <div className=\"title_holder\">\r\n                              <h3 className=\"fn_title\">\r\n                                <Link href={`/nft/${nft.id}`} legacyBehavior>{nft.title}</Link>\r\n                              </h3>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              {/* !Result List */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nfts: state.nfts.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getNfts })(Collection);\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\index.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\nft\\[id].js",["240","241","242","243","244","245","246","247","248","249","250","251","252"],[],"import Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Layout from \"../../src/layout/Layout\";\r\nimport { getNfts, getSingleNft } from \"../../src/redux/actions/nfts\";\r\nconst Nft = ({ getSingleNft, nft, getNfts, nfts }) => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const [similarItem, setSimilarItem] = useState([]);\r\n  useEffect(() => {\r\n    getSingleNft(id);\r\n    getNfts();\r\n  }, [id]);\r\n  useEffect(() => {\r\n    if (nfts && nft) {\r\n      setSimilarItem(\r\n        nfts.filter(\r\n          (nft_) =>\r\n            nft_.type === nft.type ||\r\n            nft.special === nft_.special ||\r\n            nft.clothing == nft_.clothing\r\n        )\r\n      );\r\n    }\r\n  }, [nfts]);\r\n\r\n  const [quantity, setQuantity] = useState(nft ? nft.quantity : 0);\r\n\r\n  const updateQuantity = (type) => {\r\n    if (type == \"+\") {\r\n      setQuantity((nft.quantity = nft.quantity + 1));\r\n    } else {\r\n      setQuantity((nft.quantity = nft.quantity == 1 ? 1 : nft.quantity - 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout pageTitle={\"Minting\"}>\r\n      <div className=\"metaportal_fn_mintpage\">\r\n        <div className=\"container small\">\r\n          {/* Mint Top */}\r\n          <div className=\"metaportal_fn_mint_top\">\r\n            <div className=\"mint_left\">\r\n              <div className=\"img\">\r\n                <div\r\n                  className=\"img_in\"\r\n                  style={{ backgroundImage: `url(${nft && nft.image})` }}\r\n                >\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mint_right\">\r\n              <div className=\"metaportal_fn_share\">\r\n                <h5 className=\"label\">Share:</h5>\r\n                <ul>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <img\r\n                        src=\"/svg/social/twitter-1.svg\"\r\n                        alt=\"\"\r\n                        className=\"fn__svg\"\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <img\r\n                        src=\"/svg/social/facebook-1.svg\"\r\n                        alt=\"\"\r\n                        className=\"fn__svg\"\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <img\r\n                        src=\"/svg/social/instagram-1.svg\"\r\n                        alt=\"\"\r\n                        className=\"fn__svg\"\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <img\r\n                        src=\"/svg/social/pinterest-1.svg\"\r\n                        alt=\"\"\r\n                        className=\"fn__svg\"\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <img\r\n                        src=\"/svg/social/behance-1.svg\"\r\n                        alt=\"\"\r\n                        className=\"fn__svg\"\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"metaportal_fn_breadcrumbs\">\r\n                <p>\r\n                  <Link href=\"/\">\r\n                    Home\r\n                  </Link>\r\n                  <span className=\"separator\">/</span>\r\n                  <Link href=\"/collection\">\r\n                    Collection\r\n                  </Link>\r\n                  <span className=\"separator\">/</span>\r\n                  <span className=\"current\">{nft && nft.title}</span>\r\n                </p>\r\n              </div>\r\n              <h3\r\n                className=\"fn__maintitle\"\r\n                data-text={nft && nft.title}\r\n                data-align=\"left\"\r\n              >\r\n                {nft && nft.title}\r\n              </h3>\r\n              <div className=\"desc\">\r\n                <p>\r\n                  Suspendisse eu velit est. Cras nec vestibulum quam. Donec\r\n                  tincidunt purus nec enim tincidunt, sit amet facilisis massa\r\n                  laoreet. Integer mollis nec sapien eu lacinia. Nunc eu massa\r\n                  dictum, vulputate neque ac, porta mauris. Sed sollicitudin\r\n                  nisi augue, a gravida turpis elementum vel. Curabitur sagittis\r\n                  quis diam et rhoncus. Nam pellentesque imperdiet aliquet. Sed\r\n                  non ante malesuada, ultrices sem at, tempus libero.\r\n                </p>\r\n                <p>\r\n                  Duis eu lorem ut mauris pulvinar auctor. Maecenas et dapibus\r\n                  orci, eleifend euismod justo. Quisque luctus turpis eu\r\n                  tristique feugiat. Praesent ac magna feugiat, interdum lacus\r\n                  ac, interdum dui. Pellentesque id quam quis enim malesuada\r\n                  rutrum. Orci varius natoque penatibus et magnis dis\r\n                  parturient.\r\n                </p>\r\n              </div>\r\n              <div className=\"view_on\">\r\n                <ul>\r\n                  <li>\r\n                    <span>View On:</span>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <img src=\"/svg/opensea.svg\" alt=\"\" className=\"fn__svg\" />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <img src=\"/svg/portal.svg\" alt=\"\" className=\"fn__svg\" />\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* !Mint Top */}\r\n          {/* Mint Box */}\r\n          <div className=\"metaportal_fn_mintbox\">\r\n            <div className=\"mint_left\">\r\n              <div className=\"mint_title\">\r\n                <span>Public Mint is Live</span>\r\n              </div>\r\n              <div className=\"mint_list\">\r\n                <ul>\r\n                  <li>\r\n                    <div className=\"item\">\r\n                      <h4>Price</h4>\r\n                      <h3>{nft && nft.price} ETH</h3>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"item\">\r\n                      <h4>Remaining</h4>\r\n                      <h3>344/999</h3>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"item\">\r\n                      <h4>Quantity</h4>\r\n                      <div className=\"qnt\">\r\n                        <span\r\n                          className=\"decrease\"\r\n                          onClick={() => updateQuantity(\"-\")}\r\n                        >\r\n                          -\r\n                        </span>\r\n                        <span className=\"summ\" data-price={nft && nft.quantity}>\r\n                          {nft && nft.quantity}\r\n                        </span>\r\n                        <span\r\n                          className=\"increase\"\r\n                          onClick={() => updateQuantity(\"+\")}\r\n                        >\r\n                          +\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"item\">\r\n                      <h4>Total Price</h4>\r\n                      <h3>\r\n                        {nft && (\r\n                          <span className=\"total_price\">\r\n                            {(Number(nft.price) * Number(nft.quantity)).toFixed(\r\n                              2\r\n                            )}\r\n                          </span>\r\n                        )}\r\n                        ETH + GAS\r\n                      </h3>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"mint_desc\">\r\n                <a\r\n                  href=\"#\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  className=\"metaportal_fn_button\"\r\n                >\r\n                  <span>Mint Now</span>\r\n                </a>\r\n                <p>\r\n                  By clicking “MINT NOW” button, you agree to our{\" \"}\r\n                  <a href=\"#\">Terms of Service</a> and our{\" \"}\r\n                  <a href=\"#\">Privacy Policy</a>.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"mint_right\">\r\n              <div className=\"mright\">\r\n                <div className=\"mint_time\">\r\n                  <h4>Public Mint Ends In</h4>\r\n                  {/* \r\n      There is two types of countdown: due_date (Due Date), ever (Evergreen timer)\r\n       1. \tdata-type=\"due_date\"\r\n        In this case you have to change value of data-date. For example:\r\n        data-date=\"October 13, 2022 12:30:00\"\r\n        It will mean that mint will finished at this time\r\n\r\n       2. \tdata-type=\"ever\"\r\n        In this case you have to change values of data-days, data-hours, data-minutes and data-seconds. For example:\r\n        data-days=\"34\"\r\n        data-hours=\"10\"\r\n        data-minutes=\"20\"\r\n        data-seconds=\"0\"\r\n        It will mean that the time expires after this time, but when the page is refreshed, the value will return again. It means, it won't end.\r\n     */}\r\n                  <h3\r\n                    className=\"metaportal_fn_countdown\"\r\n                    data-type=\"ever\"\r\n                    data-date=\"October 13, 2022 12:30:00\"\r\n                    data-days={34}\r\n                    data-hours={10}\r\n                    data-minutes={20}\r\n                    data-seconds={0}\r\n                  >\r\n                    0d: 0h: 0m: 0s\r\n                  </h3>\r\n                </div>\r\n                <div className=\"mint_checked\">\r\n                  <p>\r\n                    <span className=\"text\">Whitelist:</span>\r\n                    <span className=\"status\">\r\n                      Soldout{\" \"}\r\n                      <span className=\"icon\">\r\n                        <img\r\n                          src=\"/svg/checked.svg\"\r\n                          alt=\"\"\r\n                          className=\"fn__svg\"\r\n                        />\r\n                      </span>\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"text\">Presale:</span>\r\n                    <span className=\"status\">\r\n                      Soldout{\" \"}\r\n                      <span className=\"icon\">\r\n                        <img\r\n                          src=\"/svg/checked.svg\"\r\n                          alt=\"\"\r\n                          className=\"fn__svg\"\r\n                        />\r\n                      </span>\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"mint_info\">\r\n                  <p>\r\n                    You need to pay a GAS fee during minting. We allow max 5\r\n                    mints per wallet.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* !Mint Box */}\r\n          {/* NFT Categories */}\r\n          <div className=\"metaportal_fn_nft_cats\">\r\n            <ul>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <h4 className=\"parent_category\">Clothing</h4>\r\n                  <h3 className=\"child_category\" title=\"Black Yukata\">\r\n                    Black Yukata\r\n                  </h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <h4 className=\"parent_category\">Eyes</h4>\r\n                  <h3 className=\"child_category\" title=\"Daydreaming\">\r\n                    Daydreaming\r\n                  </h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <h4 className=\"parent_category\">Special</h4>\r\n                  <h3 className=\"child_category\" title=\"Fireflies, Smoke\">\r\n                    Fireflies, Smoke\r\n                  </h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <h4 className=\"parent_category\">Type</h4>\r\n                  <h3 className=\"child_category\" title=\"Human, Sand\">\r\n                    Human, Sand\r\n                  </h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <h4 className=\"parent_category\">Mouth</h4>\r\n                  <h3 className=\"child_category\" title=\"Not Bad\">\r\n                    Not Bad\r\n                  </h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <h4 className=\"parent_category\">Neck</h4>\r\n                  <h3 className=\"child_category\" title=\"Zen Headphones\">\r\n                    Zen Headphones\r\n                  </h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <h4 className=\"parent_category\">Eyes</h4>\r\n                  <h3 className=\"child_category\" title=\"Striking\">\r\n                    Striking\r\n                  </h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <h4 className=\"parent_category\">Neck</h4>\r\n                  <h3 className=\"child_category\" title=\"Zen Headphones\">\r\n                    Zen Headphones\r\n                  </h3>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {/* !NFT Categories */}\r\n          {/* Similar Items */}\r\n          <div className=\"metaportal_fn_similar\">\r\n            <h3 className=\"fn__maintitle\" data-text=\"Similar Items\">\r\n              Similar Items\r\n            </h3>\r\n            <div className=\"fn_cs_divider\">\r\n              <div className=\"divider\">\r\n                <span />\r\n                <span />\r\n              </div>\r\n            </div>\r\n            <div className=\"metaportal_fn_drops\">\r\n              <ul className=\"grid\">\r\n                {nfts &&\r\n                  similarItem.map(\r\n                    (nft, i) =>\r\n                      nft.id < 8 && (\r\n                        <li key={nft.id}>\r\n                          <div className=\"nft__item\">\r\n                            <div className=\"img_holder\">\r\n                              <img src={nft.image} alt=\"\" />\r\n                              <Link href={`/nft/${nft.id}`} className=\"full_link\">\r\n\r\n                              </Link>\r\n                            </div>\r\n                            <div className=\"title_holder\">\r\n                              <h3 className=\"fn_title\">\r\n                                <a href=\"#\">{nft.title}</a>\r\n                              </h3>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                  )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          {/* !Similar Items */}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nft: state.nfts.nft,\r\n  nfts: state.nfts.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getSingleNft, getNfts })(Nft);\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\_app.js",["253","254","255"],[],"import Head from \"next/head\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../src/redux/store\";\r\nimport \"../styles/globals.css\";\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  return (\r\n    <Provider store={store}>\r\n      <Head>\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link\r\n          rel=\"preconnect\"\r\n          href=\"https://fonts.gstatic.com\"\r\n          crossOrigin=\"\"\r\n        />\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css2?family=Heebo:wght@100;200;300;400;500;600;700;800;900&family=Nunito:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\"\r\n          rel=\"stylesheet\"\r\n        />\r\n        {/* !Google Fonts */}\r\n        {/* Styles */}\r\n        <link\r\n          type=\"text/css\"\r\n          rel=\"stylesheet\"\r\n          href=\"/css/plugins.css?ver=4.1\"\r\n        />\r\n        <link type=\"text/css\" rel=\"stylesheet\" href=\"/css/style.css?ver=4.1\" />\r\n      </Head>\r\n      <Component {...pageProps} />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default MyApp;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\pages\\_document.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\About.js",["256","257"],[],"import { Button } from \"@mui/material\";\r\nimport Link from \"next/link\";\r\n// Function to load the PayPal script dynamically\r\n\r\n\r\n\r\nconst About = () => {\r\n  return (\r\n    <section id=\"about\">\r\n      \r\n      {/* About Shortcode */}\r\n      <div className=\"fn_cs_about\">\r\n        <div className=\"left_part\">\r\n          <div className=\"img\">\r\n            <div className=\"img_in\" data-bg-img=\"/img/about/3.png\">\r\n              <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg_overlay\">\r\n            <div className=\"bg_color\" />\r\n            <div className=\"bg_image\" data-bg-img=\"/img/about/7.png\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"right_part\">\r\n  <div className=\"right_in\">\r\n    <h3 className=\"fn__maintitle\" data-text=\"Subscription Plans\">\r\n      Subscription Plans\r\n    </h3>\r\n    <div className=\"fn_cs_divider\">\r\n      <div className=\"divider\">\r\n        <span />\r\n        <span />\r\n      </div>\r\n    </div>\r\n    <div className=\"subscription-boxes\">\r\n      <div className=\"subscription-box\">\r\n        <h4>Weekly Subscription</h4>\r\n        <p>$5 per week</p>\r\n        <Button \r\n        variant=\"contained\" onclick=\"purchaseSubscription('weekly')\" width={\"100%\"}\r\n                sx={{\r\n                  marginTop: \"30px\",\r\n                  backgroundColor: \"#808080\",\r\n                  color: \"white\",\r\n                  fontWeight: \"bold\",\r\n                  marginBottom: \"30px\",\r\n                  paddingX: \"50px\",\r\n                }}>Purchase</Button>\r\n      </div>\r\n      <div className=\"subscription-box\">\r\n        <h4>Monthly Subscription</h4>\r\n        <p>$15 per month</p>\r\n        <Button \r\n        variant=\"contained\" onclick=\"purchaseSubscription('monthly')\" width={\"100%\"}\r\n                sx={{\r\n                  marginTop: \"30px\",\r\n                  backgroundColor: \"#808080\",\r\n                  color: \"white\",\r\n                  fontWeight: \"bold\",\r\n                  marginBottom: \"30px\",\r\n                  paddingX: \"50px\",\r\n                }}>Purchase</Button>\r\n      </div>\r\n      <div className=\"subscription-box\">\r\n        <h4>Yearly Subscription</h4>\r\n        <p>$100 per year</p>\r\n        <Button \r\n        variant=\"contained\" onclick=\"purchaseSubscription('yearly')\" width={\"100%\"}\r\n                sx={{\r\n                  marginTop: \"30px\",\r\n                  backgroundColor: \"#808080\",\r\n                  color: \"white\",\r\n                  fontWeight: \"bold\",\r\n                  marginBottom: \"30px\",\r\n                  paddingX: \"50px\",\r\n                }}>Purchase</Button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n      </div>\r\n      {/* !About Shortcode */}\r\n     \r\n    </section>\r\n  );\r\n};\r\nexport default About;\r\n\r\nexport const About2 = () => (\r\n  <section id=\"about2\">\r\n    <div className=\"container small\">\r\n      <div className=\"fn_cs_shortabout\">\r\n        <div className=\"about_left\">\r\n          <h3 className=\"fn__maintitle\" data-text=\"The Rise of Legends\">\r\n            The Rise of Legends\r\n          </h3>\r\n          <div className=\"fn_cs_divider\">\r\n            <div className=\"divider\">\r\n              <span />\r\n              <span />\r\n            </div>\r\n          </div>\r\n          <div className=\"desc\">\r\n            <p>\r\n              As the first hero of the Meta Legends, collection has over 9,999\r\n              unique skins drawn from the different missions and challenges he\r\n              faced throughout his life.\r\n            </p>\r\n            <p>\r\n              The artwork has been hand-drawned by Robert Green in the\r\n              traditional anime style and composited by Layla Efiyo.\r\n            </p>\r\n          </div>\r\n          <a\r\n            href=\"https://discord.com/\"\r\n            className=\"metaportal_fn_button\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <span>Find us On Discord</span>\r\n          </a>\r\n        </div>\r\n        <div className=\"about_right\">\r\n          <div className=\"abs_img\" data-bg-img=\"/img/about/2.jpg\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"fn_cs_collection_info\">\r\n        <h3 className=\"fn__gradient_title\">10,000</h3>\r\n        <h3\r\n          className=\"fn__maintitle upper\"\r\n          data-text=\"Total Items in Collection\"\r\n        >\r\n          Total Items in Collection\r\n        </h3>\r\n        <p>\r\n          There are many variations of passages of lorem ipsum available, but\r\n          the majority have suffered alteration in some form, by injected\r\n          humour, or randomised words which {`don't`} look even slightly\r\n          believable.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div className=\"fn_cs_video bg\">\r\n      <div className=\"abs_img\" data-bg-img=\"/img/video/1.jpg\" />\r\n      <a\r\n        className=\"popup-youtube\"\r\n        href=\"https://www.youtube.com/embed/7e90gBu4pas\"\r\n      >\r\n        <img src=\"/svg/play.svg\" alt=\"\" className=\"fn__svg\" />\r\n      </a>\r\n    </div>\r\n    <div className=\"container\">\r\n      {/* Steps Shortcode */}\r\n      <div className=\"fn_cs_steps gap\" data-cols={4} data-gap={60}>\r\n        <ul>\r\n          <li>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <h3 className=\"fn__gradient_title\">01</h3>\r\n                <p>Connect your Wallet</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <h3 className=\"fn__gradient_title\">02</h3>\r\n                <p>Select Your Quantity</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <h3 className=\"fn__gradient_title\">03</h3>\r\n                <p>Confirm The Transaction</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <h3 className=\"fn__gradient_title\">04</h3>\r\n                <p>Receive Your {`NFT’s`}</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {/* !Steps Shortcode */}\r\n      <div className=\"fn_cs_join\">\r\n        <div className=\"join_in\">\r\n          <h3 className=\"fn__maintitle upper\" data-text=\"Join Our Community\">\r\n            Join Our Community\r\n          </h3>\r\n          <p>\r\n            There are many variations of passages of lorem ipsum available, but\r\n            the majority have suffered alteration in some form, by injected\r\n            humour, or randomised words which {`don't`} look even slightly\r\n            believable.\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <a\r\n              href=\"https://opensea.io/\"\r\n              className=\"metaportal_fn_button\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <span>Buy On Opensea</span>\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              className=\"metaportal_fn_button\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <span>WhiteList Now</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  \r\n);\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\Collection.js",["258","259","260","261","262","263","264","265"],[],"import Link from \"next/link\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Collection = () => {\r\n  useEffect(() => {\r\n    const collection = document.querySelector(\".fn_cs_collection\");\r\n    var items = collection.querySelectorAll(\".item\");\r\n    var itemsLength = items.length;\r\n    setInterval(function () {\r\n      var numberOne = Math.floor(Math.random() * itemsLength);\r\n      var numberTwo = Math.floor(Math.random() * itemsLength);\r\n\r\n      while (numberTwo === numberOne) {\r\n        numberTwo = Math.floor(Math.random() * itemsLength);\r\n      }\r\n      var firstDiv = items[numberOne];\r\n      var secondDiv = items[numberTwo];\r\n      var firstImage = firstDiv.querySelector(\"input\").value;\r\n      var secondImage = secondDiv.querySelector(\"input\").value;\r\n      firstDiv.classList.add(\"ready\");\r\n      secondDiv.classList.add(\"ready\");\r\n      // console.log(firstDiv.querySelector(\"input\").value == firstDiv);\r\n      setTimeout(function () {\r\n        // console.log(secondDiv.querySelector(\"input\").value == firstDiv);\r\n        // firstDiv.querySelector(\"input\").value == secondImage;\r\n        // firstDiv.querySelector(\".abs_img\").style.backgroundImage =\r\n        //   \"url(\" + secondImage + \")\";\r\n        // // secondDiv.querySelector(\"input\").val(firstImage);\r\n        // secondDiv.querySelector(\"input\").value == firstDiv;\r\n        // console.log(secondDiv.querySelector(\"input\").value);\r\n        // secondDiv.querySelector(\".abs_img\").style.backgroundImage =\r\n        //   \"url(\" + firstImage + \")\";\r\n\r\n        firstDiv.classList.remove(\"ready\");\r\n        secondDiv.classList.remove(\"ready\");\r\n      }, 500);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"collection\">\r\n      <div className=\"container\">\r\n        <h3\r\n          className=\"fn__maintitle big\"\r\n          data-text=\"Our Collection\"\r\n          data-align=\"center\"\r\n        >\r\n          Our Collection\r\n        </h3>\r\n        <div className=\"fn_cs_collection\">\r\n          <div className=\"collection_top\">\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <div className=\"img\">\r\n                  <div\r\n                    className=\"abs_img\"\r\n                    data-bg-img=\"/img/collection/1.png\"\r\n                  />\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <input type=\"hidden\" defaultValue=\"img/collection/8.png\" />\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <div className=\"img\">\r\n                  <div\r\n                    className=\"abs_img\"\r\n                    data-bg-img=\"/img/collection/2.png\"\r\n                  />\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <input type=\"hidden\" defaultValue=\"img/collection/9.png\" />\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <div className=\"img\">\r\n                  <div\r\n                    className=\"abs_img\"\r\n                    data-bg-img=\"/img/collection/3.png\"\r\n                  />\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <input type=\"hidden\" defaultValue=\"img/collection/3.jpg\" />\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <div className=\"img\">\r\n                  <div\r\n                    className=\"abs_img\"\r\n                    data-bg-img=\"/img/collection/6.png\"\r\n                  />\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <input type=\"hidden\" defaultValue=\"img/collection/6.jpg\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"collection_bottom\">\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <div className=\"img\">\r\n                  <div\r\n                    className=\"abs_img\"\r\n                    data-bg-img=\"/img/collection/5.png\"\r\n                  />\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <input type=\"hidden\" defaultValue=\"img/collection/5.jpg\" />\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <div className=\"img\">\r\n                  <div\r\n                    className=\"abs_img\"\r\n                    data-bg-img=\"/img/collection/4.png\"\r\n                  />\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <input type=\"hidden\" defaultValue=\"img/collection/4.jpg\" />\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <div className=\"img\">\r\n                  <div\r\n                    className=\"abs_img\"\r\n                    data-bg-img=\"/img/collection/7.png\"\r\n                  />\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <input type=\"hidden\" defaultValue=\"img/collection/8.png\" />\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"item_in\">\r\n                <div className=\"img\">\r\n                  <div\r\n                    className=\"abs_img\"\r\n                    data-bg-img=\"/img/collection/8.png\"\r\n                  />\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <input type=\"hidden\" defaultValue=\"img/collection/8.jpg\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"fn_cs_desc\">\r\n          <p>All the images has been generated by AI</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Collection;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\Contact.js",["266","267"],[],"const Contact = () => {\r\n  return (\r\n    <section id=\"contact\">\r\n      <div className=\"container\">\r\n        <h3\r\n          className=\"fn__maintitle big\"\r\n          data-text=\"Contact Us\"\r\n          data-align=\"center\"\r\n        >\r\n          Contact Us\r\n        </h3>\r\n        <div className=\"fn_cs_contact_info\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"item\">\r\n                <p>\r\n                 Welcome to our Contact Us page! We value your feedback, inquiries, and suggestions. Feel free to reach out to us through any of the methods below, and we'll be glad to assist you.\r\n                </p>\r\n                \r\n              </div>\r\n            </li>\r\n            \r\n          </ul>\r\n        </div>\r\n        <div className=\"fn_cs_contact_form\">\r\n          <form\r\n            action=\"/\"\r\n            method=\"post\"\r\n            className=\"contact_form\"\r\n            id=\"contact_form\"\r\n            autoComplete=\"off\"\r\n          >\r\n            <div className=\"input_list\">\r\n              <ul>\r\n                <li>\r\n                  <input id=\"name\" type=\"text\" placeholder=\"Your Name *\" />\r\n                </li>\r\n                <li>\r\n                  <input id=\"email\" type=\"text\" placeholder=\"Your Email *\" />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    id=\"tel\"\r\n                    type=\"text\"\r\n                    placeholder=\"Your Phone (optional)\"\r\n                  />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    id=\"subject\"\r\n                    type=\"text\"\r\n                    placeholder=\"Topic (optional)\"\r\n                  />\r\n                </li>\r\n                <li className=\"full\">\r\n                  <textarea\r\n                    id=\"message\"\r\n                    placeholder=\"Your Message *\"\r\n                    defaultValue={\"\"}\r\n                  />\r\n                </li>\r\n                <li className=\"full\">\r\n                  <label className=\"fn__checkbox\">\r\n                    <input type=\"checkbox\" />\r\n                    <span className=\"fn__checkmark\">\r\n                      <img src=\"/svg/checked.svg\" alt=\"\" className=\"fn__svg\" />\r\n                    </span>\r\n                    <p>\r\n                      I’m okay with getting emails and having that activity\r\n                      tracked to improve my experience.\r\n                    </p>\r\n                  </label>\r\n                  <div className=\"mw300\">\r\n                    <a\r\n                      id=\"send_message\"\r\n                      href=\"#\"\r\n                      className=\"metaportal_fn_button full\"\r\n                    >\r\n                      <span>Send Message</span>\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div\r\n              className=\"returnmessage\"\r\n              data-success=\"Your message has been received, We will contact you soon.\"\r\n            />\r\n            <div className=\"empty_notice\">\r\n              <span>! Please Fill Required Fields !</span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Contact;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\Counter.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\FunFacts.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\HeroSlider.js",["268","269","270","271","272","273","274","275","276","277","278","279","280"],[],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\"; // Import the axios library\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  TextareaAutosize,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nconst HeroSlider = () => {\r\n  // Hero slider\r\n  useEffect(() => {\r\n    const fn_cs_slider = document.querySelectorAll(\".fn_cs_slider\");\r\n    \r\n    fn_cs_slider.forEach((element) => {\r\n      let sliderTop = element.getElementsByClassName(\"slider_top\")[0],\r\n        sliderBottom = element.getElementsByClassName(\"slider_content\"),\r\n        activeIndex = 2,\r\n        speed = 6000;\r\n\r\n      let myInterval = setInterval(function () {\r\n        activeIndex++;\r\n        activeIndex = sliderDo(sliderTop, sliderBottom, activeIndex);\r\n      }, speed);\r\n      const prev = document.querySelector(\".slider_nav .prev\"),\r\n        next = document.querySelector(\".slider_nav .next\"),\r\n        li = element.getElementsByTagName(\"li\");\r\n      prev.addEventListener(\"click\", function (e) {\r\n        e.preventDefault();\r\n        clearInterval(myInterval);\r\n        activeIndex--;\r\n        activeIndex = sliderDo(sliderTop, sliderBottom, activeIndex);\r\n        myInterval = setInterval(function () {\r\n          activeIndex++;\r\n          activeIndex = sliderDo(sliderTop, sliderBottom, activeIndex);\r\n        }, speed);\r\n        return false;\r\n      });\r\n      next.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        clearInterval(myInterval);\r\n        activeIndex++;\r\n        activeIndex = sliderDo(sliderTop, sliderBottom, activeIndex);\r\n        myInterval = setInterval(function () {\r\n          activeIndex--;\r\n          activeIndex = sliderDo(sliderTop, sliderBottom, activeIndex);\r\n        }, speed);\r\n        return false;\r\n      });\r\n      for (let i = 0; i < li.length; i++) {\r\n        const liElement = li[i];\r\n        const getClass = liElement.getAttribute(\"class\");\r\n        if (getClass === \"next\") {\r\n          activeIndex++;\r\n        } else if (getClass === \"prev\") {\r\n          activeIndex--;\r\n        } else {\r\n          return false;\r\n        }\r\n        clearInterval(myInterval);\r\n        activeIndex = sliderDo(sliderTop, sliderBottom, activeIndex);\r\n        myInterval = setInterval(function () {\r\n          activeIndex++;\r\n          activeIndex = sliderDo(sliderTop, sliderBottom, activeIndex);\r\n        }, speed);\r\n        return false;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const sliderDo = (sliderTop, sliderBottom, activeIndex) => {\r\n    var topLength = sliderTop.getElementsByTagName(\"li\").length;\r\n    if (activeIndex > topLength) {\r\n      activeIndex -= topLength;\r\n    }\r\n    var indexPrev = activeIndex - 1;\r\n    var indexPrev2 = activeIndex - 2;\r\n    var indexNext = activeIndex + 1;\r\n    var indexNext2 = activeIndex + 2;\r\n    if (indexPrev > topLength) {\r\n      indexPrev -= topLength;\r\n    }\r\n    if (indexPrev2 > topLength) {\r\n      indexPrev2 -= topLength;\r\n    }\r\n    if (indexNext > topLength) {\r\n      indexNext -= topLength;\r\n    }\r\n    if (indexNext2 > topLength) {\r\n      indexNext2 -= topLength;\r\n    }\r\n    if (indexPrev < 1) {\r\n      indexPrev += topLength;\r\n    }\r\n    if (indexPrev2 < 1) {\r\n      indexPrev2 += topLength;\r\n    }\r\n    if (activeIndex < 1) {\r\n      activeIndex += topLength;\r\n    }\r\n    if (indexNext < 1) {\r\n      indexNext += topLength;\r\n    }\r\n    if (indexNext2 < 1) {\r\n      indexNext2 += topLength;\r\n    }\r\n    let li = sliderTop.getElementsByTagName(\"li\");\r\n    for (let i = 0; i < li.length; i++) {\r\n      const element = li[i];\r\n      element.classList.remove(\"prev\", \"prev2\", \"active\", \"next\", \"next2\");\r\n      // element.setAttribute(`data-index${indexNext}`);\r\n    }\r\n    sliderTop\r\n      .querySelector('li[data-index=\"' + indexPrev2 + '\"]')\r\n      .classList.add(\"prev2\");\r\n    sliderTop\r\n      .querySelector('li[data-index=\"' + indexPrev + '\"]')\r\n      .classList.add(\"prev\");\r\n    sliderTop\r\n      .querySelector('li[data-index=\"' + activeIndex + '\"]')\r\n      .classList.add(\"active\");\r\n    sliderTop\r\n      .querySelector('li[data-index=\"' + indexNext + '\"]')\r\n      .classList.add(\"next\");\r\n    sliderTop\r\n      .querySelector('li[data-index=\"' + indexNext2 + '\"]')\r\n      .classList.add(\"next2\");\r\n    return activeIndex;\r\n  };\r\n\r\n  const [TextAreaValue, setTextAreaValue] = useState();\r\n  const [result, setResult] = useState();\r\n  const [ImgStyle, setImgStyle] = useState(null); // border image or set model pick\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false); //image pop up dialog\r\n  const [loadImage, setLoadImage] = useState(true); // image loader while gener\r\n  const openImageDialog = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeImageDialog = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n  const model_styles = [\r\n    \"juggernaut-xl\",\r\n    \"xsdmodelx\",\r\n    \"dream-shaper-8797\",\r\n    \"midjourney\",\r\n    \"sdxl-unstable-diffusers-y\",\r\n    \"ae-sdxl-v1\",\r\n    \"crystal-clear-xlv1\",\r\n    \"sdxl\",\r\n  ];\r\n  const model_img_paths = [\r\n    \"/img/Model/juggernaut-xl.jpg\",\r\n    \"/img/Model/xsdmodelx.jpg\",\r\n    \"/img/Model/dream-shaper-8797.jpg\",\r\n    \"/img/Model/midjourney.jpg\",\r\n    \"/img/Model/sdxl-unstable-diffusers-y.jpg\",\r\n    \"/img/Model/AE-SDXL-V1-Model1.jpg\",\r\n    \"/img/Model/crystal-clear-xlv1.jpg\",\r\n    \"/img/Model/SDXL.jpg\",\r\n  ];\r\n  const API_ENDPOINT = \"https://modelslab.com/api/v6/realtime/text2img\";\r\n  useEffect(() => {\r\n    console.log(\"result\", result);\r\n  }, [result]);\r\n  const HandleAPICall = async (ModelId) => {\r\n    try {\r\n      const model_id = ModelId;\r\n      setLoadImage(false);\r\n      const requestData = {\r\n        key: \"xhjjeNlNe5qfoTfKc6w7oj4shoFZ4wxRxL7CTeWlJ8BImrZWL2kUHb1Ob1gs\",\r\n        prompt: TextAreaValue, // Use the textarea value\r\n        negative_prompt:\r\n          \"(text, watermark:2.0), gaussian noise, worst quality, ...\", // Your negative prompt\r\n        model_id: model_id,\r\n        width: \"1024\",\r\n  height: \"1024\", \r\n  samples: \"1\",\r\n  num_inference_steps: \"30\",\r\n  safety_checker: false,\r\n  enhance_prompt: \"true\",\r\n  seed: null,\r\n  guidance_scale: 2,\r\n  multi_lingual: \"false\",\r\n  panorama: \"false\",\r\n  self_attention: \"false\",\r\n  upscale: \"false\",\r\n  embeddings_model: null,\r\n  lora_model: null,\r\n  tomesd: \"true\",\r\n  clip_skip: \"2\",\r\n  use_karras_sigmas: \"true\",\r\n  vae: null,\r\n  lora_strength: null,\r\n  scheduler: \"UniPCMultistepScheduler\",\r\n  webhook: null,\r\n  track_id: null\r\n      };\r\n\r\n      const response = await fetch(API_ENDPOINT, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      });\r\n      setLoadImage(true);\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n\r\n        // Check for data in the response\r\n        if (\r\n          responseData.status === \"success\" &&\r\n          responseData.output &&\r\n          responseData.output.length > 0\r\n        ) {\r\n          setResult(responseData.output[0]);\r\n          console.log(\"img\", result);\r\n          openImageDialog();\r\n\r\n          // Store the URL in the result state\r\n        } else if (responseData.status === \"processing\") {\r\n          console.log(\r\n            \"API response is still processing. You may need to wait and check again.\"\r\n          );\r\n        } else {\r\n          console.error(\r\n            \"API response does not contain valid data:\",\r\n            responseData\r\n          );\r\n        }\r\n      } else {\r\n        console.error(\"API request failed with status:\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  // const handleOpenResult = () => {\r\n  //   if (result) {\r\n  //     window.open(result, \"_blank\"); // Open the URL in a new tab\r\n  //   }\r\n  // };\r\n\r\n  const [image_number, set_image_number] = useState(0);\r\n  const downloadImage = (url) => {\r\n    fetch(url)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        const link = document.createElement(\"a\");\r\n        link.href = window.URL.createObjectURL(blob);\r\n        link.download = `generated_image_${image_number}.png`; // Set the desired file name\r\n        document.body.appendChild(link);\r\n        set_image_number(image_number + 1);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      })\r\n      .catch((error) => console.error(\"Error downloading image:\", error));\r\n  };\r\n\r\n  const handleTextAreaChange = (event) => {\r\n    setTextAreaValue(event.target.value); // Update the state with the new value\r\n  };\r\n  useEffect(() => {\r\n    // console.log('text' , TextAreaValue);\r\n  }, [TextAreaValue]);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  return (\r\n    <section id=\"home\">\r\n      <div className=\"container\">\r\n        <h3\r\n          className=\"fn__maintitle big\"\r\n          data-text=\"FANTASISE AI ART\" FANTASISE AI ART\r\n          data-align=\"center\"\r\n        >\r\n          FANTASISE AI ART\r\n        </h3>\r\n        {/* Slider */}\r\n        <div className=\"fn_cs_slider\" data-responsive=\"on\">\r\n          <div className=\"slider_top\">\r\n            <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n            <ul>\r\n            <li\r\n      className={`prev ${isHovered ? 'hovered' : ''}`}\r\n      data-index={1}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <div className=\"item\">\r\n        <img src=\"/img/1x1.jpg\" alt=\"\" className=\"image-hover\" />\r\n        <div className=\"item_in\">\r\n          <div className=\"img\" style={{ backgroundImage: 'url(\"/img/slider/1.png\")' }}>\r\n            {/* Add text overlay here */}\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n              <li className=\"active\" data-index={2}>\r\n                <div className=\"item\">\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                  <div className=\"item_in\">\r\n                    <div className=\"img\" data-bg-img=\"/img/slider/2.png\" />\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              \r\n              <li className=\"next\" data-index={3}>\r\n                <div className=\"item has_video\">\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                  <a\r\n                    className=\"popup-youtube metaportal_fn_videobutton\" //video link code\r\n                    href=\"\"\r\n                  >\r\n                    <img src=\"/svg/play.svg\" alt=\"\" className=\"fn__svg\" />\r\n                  </a>\r\n                  <div className=\"item_in\">\r\n                    <div className=\"img\" data-bg-img=\"/img/slider/3.png\" />\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li className=\"next2\" data-index={4}>\r\n                <div className=\"item\">\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                  <div className=\"item_in\">\r\n                    <div className=\"img\" data-bg-img=\"/img/slider/4.png\" />\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li data-index={5}>\r\n                <div className=\"item\">\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                  <div className=\"item_in\">\r\n                    <div className=\"img\" data-bg-img=\"/img/slider/5.png\" />\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li data-index={6}>\r\n                <div className=\"item\">\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                  <div className=\"item_in\">\r\n                    <div className=\"img\" data-bg-img=\"/img/slider/6.png\" />\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li className=\"prev2\" data-index={7}>\r\n                <div className=\"item\">\r\n                  <img src=\"/img/1x1.jpg\" alt=\"\" />\r\n                  <div className=\"item_in\">\r\n                    <div className=\"img\" data-bg-img=\"/img/slider/7.png\" />\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"slider_nav\">\r\n            <a href=\"#\" className=\"prev\">\r\n              <span className=\"circle\" />\r\n              <span className=\"icon\">\r\n                <img src=\"/svg/down.svg\" alt=\"\" className=\"fn__svg\" />\r\n              </span>\r\n              <span className=\"circle\" />\r\n            </a>\r\n            <a href=\"#\" className=\"next\">\r\n              <span className=\"circle\" />\r\n              <span className=\"icon\">\r\n                <img src=\"/svg/down.svg\" alt=\"\" className=\"fn__svg\" />\r\n              </span>\r\n              <span className=\"circle\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        {/* !Slider */}\r\n        {/* Description */}\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            opacity: \"0.8\",\r\n            padding: \"10px\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <div className=\"fn_cs_desc\">\r\n            <h4\r\n              style={{\r\n                fontFamily: \"Montserrat, sans-serif\",\r\n                fontSize: \"24px\",\r\n                lineHeight: \"34px\",\r\n                fontWeight: 600,\r\n                color: \"#2A0134\", // Dark purple hex color\r\n                marginBottom: \"40px\",\r\n                marginTop: \"30px\",\r\n              }}\r\n            >\r\n              Write your own prompt to generate your dream art\r\n            </h4>\r\n            <TextareaAutosize\r\n              minRows={4}\r\n              value={TextAreaValue}\r\n              onChange={handleTextAreaChange}\r\n              style={{\r\n                border: \"2px dashed #2A0134\", // Change to the specific shade or hex value you want\r\n                borderRadius: \"8px\", // Optional: add border-radius for a rounded appearance\r\n                padding: \"10px\", // Optional: add padding for better visual appearance\r\n                fontFamily: \"Montserrat, sans-serif\",\r\n                color: \"#583759\",\r\n                fontWeight: 600,\r\n              }}\r\n            ></TextareaAutosize>\r\n            <br></br>\r\n\r\n            {/* {IsDataLoading? <Button variant=\"contained\" onClick={HandleAPICall(\"juggernaut-xl\")} >Generate</Button> : <CircularProgress/>} */}\r\n\r\n            {/* <Button variant=\"outline\" onClick={() => {  setImgStyle(\"juggernaut-x\") }} load> Style 1</Button>\r\n          <Button variant=\"outline\" onClick={() => { setImgStyle(\"ae-sdxl-v1\") }} load> Style 2</Button> */}\r\n            <Box display={\"flex\"} flexWrap={\"wrap\"} boxSizing={\"border-box\"}>\r\n              {model_styles.map((model_id, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    flexBasis: \"20%\",\r\n                    padding: \"5px\",\r\n                    boxSizing: \"border-box\",\r\n                    transition: \"transform 0.2s ease-in-out\",\r\n                    borderRadius: \"10px\",\r\n                    opacity:\r\n                      selectedImage === null || selectedImage === index\r\n                        ? 1\r\n                        : 0.5,\r\n                    // Adjust opacity based on selection\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelectedImage(index);\r\n                    setImgStyle(model_styles[index]);\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={model_img_paths[index]}\r\n                    width={\"90%\"}\r\n                    height={\"90px\"}\r\n                    style={{\r\n                      borderRadius: \"10px\",\r\n                      border:\r\n                        selectedImage === index ? \"5px solid #583759\" : \"none\",\r\n                    }}\r\n                    alt={model_id}\r\n                    onMouseOver={() => {\r\n                      document.getElementById(\r\n                        `image-${index}`\r\n                      ).style.transform = \"scale(1.1)\";\r\n                    }}\r\n                    onMouseOut={() => {\r\n                      document.getElementById(\r\n                        `image-${index}`\r\n                      ).style.transform = \"scale(1)\";\r\n                    }}\r\n                    id={`image-${index}`}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Box>\r\n\r\n            {loadImage ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedImage == null ? true : false}\r\n                onClick={() => {\r\n                  HandleAPICall(ImgStyle);\r\n                }}\r\n                width={\"100%\"}\r\n                sx={{\r\n                  marginTop: \"30px\",\r\n                  backgroundColor: \"#2A0134\",\r\n                  color: \"white\",\r\n                  fontWeight: \"bold\",\r\n                  marginBottom: \"30px\",\r\n                  paddingX: \"50px\",\r\n                }}\r\n              >\r\n                Generate\r\n              </Button>\r\n            ) : (\r\n              <CircularProgress\r\n                sx={{\r\n                  marginTop: \"20px\",\r\n                  marginBottom: \"30px\",\r\n                  color: \"#2A0134\",\r\n                }}\r\n              />\r\n            )}\r\n\r\n            {result && (\r\n              <Dialog onClose={closeImageDialog} open={modalIsOpen} maxWidth>\r\n                <Box>\r\n                  <Box display=\"flex\" justifyContent=\"space-between\">\r\n                    <Typography\r\n                      style={{\r\n                        padding: \"10px\",\r\n                        fontFamily: \"Montserrat, sans-serif\",\r\n                        color: \"#583759\",\r\n                        fontWeight: 600,\r\n                      }}\r\n                    >\r\n                      The image in response to your prompt\r\n                    </Typography>\r\n                    <IconButton onClick={() => downloadImage(result)}>\r\n                      <SaveAltIcon style={{ color: \"#583759\" }} />\r\n                    </IconButton>\r\n                  </Box>\r\n                  <img\r\n                    src={result}\r\n                    alt=\"Generated Image\"\r\n                    width={\"500px\"}\r\n                    height={\"500px\"}\r\n                  />\r\n                </Box>\r\n              </Dialog>\r\n              // <div>\r\n              //   <img src={result} alt=\"Generated Image\" />\r\n              //   <br />\r\n              //   <button onClick={handleOpenResult}>Open Result in Browser</button>\r\n              // </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* !Description */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default HeroSlider;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\News.js",["281"],[],"import Link from \"next/link\";\r\nconst News = () => {\r\n  return (\r\n    <section id=\"news\">\r\n      <div className=\"container\">\r\n        <h3\r\n          className=\"fn__maintitle big\"\r\n          data-text=\"Latest Articles\"\r\n          data-align=\"center\"\r\n        >\r\n          Latest Articles\r\n        </h3>\r\n        {/* News Shotcode */}\r\n        <div className=\"fn_cs_news\">\r\n          <div className=\"news_part\">\r\n            <div className=\"left_items\">\r\n              <div className=\"blog__item\">\r\n                <div className=\"counter\">\r\n                  <span className=\"cc\">\r\n                    <span>01</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"meta\">\r\n                  <p>August 09, 2022 / Digital Revolution</p>\r\n                </div>\r\n                <div className=\"title\">\r\n                  <h3>\r\n                    <Link href=\"https://egfound.org/projects/digital-revolution-technology-power-you/?gclid=Cj0KCQjwi7GnBhDXARIsAFLvH4k3cvV5p9VLae9vjysUOlKjnLjNthpi3wSUrgziIT4LBPO8-Rbs3jIaAtZpEALw_wcB\">\r\n                       Technology, Power, & You\r\n                    </Link>\r\n                  </h3>\r\n                </div>\r\n                <div className=\"image\">\r\n                  <Link href=\"https://egfound.org/projects/digital-revolution-technology-power-you/?gclid=Cj0KCQjwi7GnBhDXARIsAFLvH4k3cvV5p9VLae9vjysUOlKjnLjNthpi3wSUrgziIT4LBPO8-Rbs3jIaAtZpEALw_wcB\">\r\n\r\n                    <img src=\"/img/blog/a1.jpg\" alt=\"\" />\r\n\r\n                  </Link>\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n            <div className=\"right_items\">\r\n              <div className=\"blog__item\">\r\n                <div className=\"counter\">\r\n                  <span className=\"cc\">\r\n                    <span>02</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"meta\">\r\n                  <p>ARTIFICIAL INTELLIGENCE, BIG DATA, SECURITY</p>\r\n                </div>\r\n                <div className=\"title\">\r\n                  <h3>\r\n                    <Link href=\"https://www.cigionline.org/articles/cyber-security-battlefield/?utm_source=google_ads&utm_medium=grant&gclid=Cj0KCQjwi7GnBhDXARIsAFLvH4nryZ78BZEvLDfkR6qPuhMsmmPuh2p-J9hbnrRhKlfSHUzGDqtADEUaAiuREALw_wcB\">\r\n                      AI and Cyber Security\r\n                    </Link>\r\n                  </h3>\r\n                </div>\r\n                \r\n              </div>\r\n              <div className=\"blog__item\">\r\n                <div className=\"counter\">\r\n                  <span className=\"cc\">\r\n                    <span>03</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"meta\">\r\n                  <p>ARTIFICIAL INTELLIGENCE</p>\r\n                </div>\r\n                <div className=\"title\">\r\n                  <h3>\r\n                    <Link href=\"https://spectrum.ieee.org/analog-ai-ibm\">\r\n                      IBM’S AI Chip May Find Use in Generative AI\r\n                    </Link>\r\n                  </h3>\r\n                </div>\r\n                \r\n              </div>\r\n              <div className=\"blog__item\">\r\n                <div className=\"counter\">\r\n                  <span className=\"cc\">\r\n                    <span>04</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"meta\">\r\n                  <p>August 09, 2022 / MetaVerse / 4 Comments</p>\r\n                </div>\r\n                <div className=\"title\">\r\n                  <h3>\r\n                    <Link href=\"https://spectrum.ieee.org/side-channel-attack\">\r\n                      This AI Can Tell What You’re Typing Based on the Sound\r\n                    </Link>\r\n                  </h3>\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom_part\">\r\n            <div className=\"left_bot\">\r\n              <Link href=\"/blog\" className=\"metaportal_fn_button full\">\r\n\r\n                <span>Read All Articles</span>\r\n\r\n              </Link>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n        {/* !News Shotcode */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default News;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\popup\\ImageView.js",["282","283"],[],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport useClickOutside from \"../../useClickOutside\";\r\n\r\nconst ImgViews = ({ close, src }) => {\r\n  let domNode = useClickOutside(() => {\r\n    close(false);\r\n  });\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mfp-bg mfp-ready\" onClick={() => close(false)}></div>\r\n      <div\r\n        className=\"mfp-wrap mfp-close-btn-in mfp-auto-cursor mfp-ready\"\r\n        tabIndex={-1}\r\n        style={{ overflow: \"hidden auto\" }}\r\n      >\r\n        <div\r\n          className={`mfp-container mfp-s-ready mfp-iframe-holder mfp-img-container`}\r\n        >\r\n          <div className=\"mfp-content\" ref={domNode}>\r\n            <div className=\"mfp-iframe-scaler\">\r\n              {/* <button\r\n                title=\"Close (Esc)\"\r\n                type=\"button\"\r\n                className=\"mfp-close\"\r\n                onClick={() => close()}\r\n              >\r\n                ×\r\n              </button> */}\r\n              <img className=\"mfp-img\" src={src} />\r\n            </div>\r\n          </div>\r\n          <div className=\"mfp-preloader\">Loading...</div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ImageView = () => {\r\n  const [img, setImg] = useState(false);\r\n  const [imgValue, setImgValue] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const a = document.querySelectorAll(\"a\");\r\n      a.forEach((a) => {\r\n        if (a.href.includes(\"img/\")) {\r\n          if (a.getAttribute(\"download\") === null) {\r\n            a.addEventListener(\"click\", (e) => {\r\n              e.preventDefault();\r\n              setImgValue(a.href);\r\n              setImg(true);\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }, 1500);\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      {img && <ImgViews close={() => setImg(false)} src={imgValue} />}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ImageView;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\popup\\VideoPopup.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\RoadMapStep.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\components\\SectionDivider.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Footer.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Header.js",["284"],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Layout.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\MobileNavigation.js",["285"],[],"import Link from \"next/link\";\r\nimport { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { navigationToggle, walletToggle } from \"../redux/actions/siteSettings\";\r\nconst MobileNavigation = ({ walletToggle, navigationToggle }) => {\r\n  const [toggle, setToggle] = useState(false);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"metaportal_fn_mobnav\">\r\n        <div className=\"mob_top\">\r\n          \r\n          \r\n        </div>\r\n        <div className=\"mob_mid\">\r\n          <div className=\"logo\">\r\n            <Link href=\"/\">\r\n\r\n              <img src=\"/img/logo.png\" alt=\"\" />\r\n\r\n            </Link>\r\n          </div>\r\n          <div\r\n            className={`trigger ${toggle ? \"active\" : \"\"}`}\r\n            onClick={() => setToggle(!toggle)}\r\n          >\r\n            <span />\r\n          </div>\r\n        </div>\r\n        <div className=\"mob_bot\" style={{ display: toggle ? \"block\" : \"none\" }}>\r\n          <ul>\r\n            <li>\r\n              <a className=\"creative_link\" href=\"#home\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"creative_link\" href=\"#about\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"creative_link\" href=\"#collection\">\r\n                Collection\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"creative_link\" href=\"#news\">\r\n                Blog\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"creative_link\" href=\"#contact\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  navigation: state.site.navigation,\r\n});\r\n\r\nexport default connect(mapStateToProps, { walletToggle, navigationToggle })(\r\n  MobileNavigation\r\n);\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Navigation.js",["286","287","288","289","290","291"],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\PageBanner.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\PreLoader.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\ScrollTop.js",["292"],[],"import { useEffect } from \"react\";\r\nimport { scrollTop } from \"../utilits\";\r\n\r\nconst ScrollTop = () => {\r\n  useEffect(() => {\r\n    scrollTop();\r\n  }, []);\r\n\r\n  return (\r\n    <a href=\"#\" className=\"metaportal_fn_totop\" style={{ height: \"183px\" }}>\r\n      <span className=\"totop_inner\">\r\n        <span className=\"icon\">\r\n          <img src=\"/svg/down.svg\" alt=\"\" className=\"fn__svg\" />\r\n        </span>\r\n        <span className=\"text\">Scroll To Top</span>\r\n      </span>\r\n    </a>\r\n  );\r\n};\r\nexport default ScrollTop;\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Searchbox.js",["293"],[],"import { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchToggle } from \"../redux/actions/siteSettings\";\r\nconst Searchbox = ({ searchToggle, search }) => {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`metaportal_fn_search_closer ${search ? \"active\" : \"\"}`}\r\n        onClick={() => searchToggle(false)}\r\n      />\r\n      <div className={`metaportal_fn_searchbox ${search ? \"active\" : \"\"}`}>\r\n        <div className=\"container small\">\r\n          <div className=\"searchbox\">\r\n            <input type=\"text\" placeholder=\"Search here...\" />\r\n            <a href=\"#\">\r\n              <img src=\"/svg/loupe.svg\" alt=\"\" className=\"fn__svg\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  search: state.site.search,\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchToggle })(Searchbox);\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\SearchButton.js",["294"],[],"import { connect } from \"react-redux\";\r\nimport { searchToggle } from \"../redux/actions/siteSettings\";\r\nconst SearchButton = ({ searchToggle }) => {\r\n  return (\r\n    <a\r\n      href=\"#\"\r\n      className=\"metaportal_fn_search hold\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        searchToggle(true);\r\n      }}\r\n    >\r\n      <span className=\"icon\">\r\n        <img src=\"/svg/loupe.svg\" alt=\"\" className=\"fn__svg\" />\r\n      </span>\r\n    </a>\r\n  );\r\n};\r\nexport default connect(null, { searchToggle })(SearchButton);\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\Social.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\layout\\WalletPopUp.js",["295","296","297","298"],[],"import { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { walletToggle } from \"../redux/actions/siteSettings\";\r\nconst WalletPopUp = ({ walletToggle, wallet }) => {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`metaportal_fn_wallet_closer ${wallet ? \"active\" : \"\"}`}\r\n        onClick={() => walletToggle(false)}\r\n      />\r\n      <div className={`metaportal_fn_walletbox ${wallet ? \"active\" : \"\"}`}>\r\n        <a href=\"#\" className=\"fn__closer\" onClick={() => walletToggle(false)}>\r\n          <span />\r\n        </a>\r\n        <div className=\"walletbox\">\r\n          <div className=\"title_holder\">\r\n            <h3>Connect Wallet</h3>\r\n            <p>\r\n              Connect with one of our available wallet providers or create a new\r\n              one.\r\n            </p>\r\n          </div>\r\n          <div className=\"list_holder\">\r\n            <ul className=\"metaportal_fn_items\">\r\n              <li>\r\n                <div className=\"item\">\r\n                  <a href=\"#\" />\r\n                  <span className=\"icon\">\r\n                    <img src=\"/img/wallet/metamask.png\" alt=\"\" />\r\n                  </span>\r\n                  <span className=\"text\">Metamask</span>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <a href=\"#\" />\r\n                  <span className=\"icon\">\r\n                    <img src=\"/img/wallet/coinbase.png\" alt=\"\" />\r\n                  </span>\r\n                  <span className=\"text\">Coinbase</span>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <a href=\"#\" />\r\n                  <span className=\"icon\">\r\n                    <img src=\"/img/wallet/walletconnect.png\" alt=\"\" />\r\n                  </span>\r\n                  <span className=\"text\">WalletConnect</span>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"item\">\r\n                  <a href=\"#\" />\r\n                  <span className=\"icon\">\r\n                    <img src=\"/img/wallet/venly.png\" alt=\"\" />\r\n                  </span>\r\n                  <span className=\"text\">Venly</span>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  wallet: state.site.wallet,\r\n});\r\n\r\nexport default connect(mapStateToProps, { walletToggle })(WalletPopUp);\r\n","C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\ParticlesBackground.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\actions\\nfts.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\actions\\siteSettings.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\actions\\type.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\reducer\\index.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\reducer\\nfts.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\reducer\\siteSettings.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\redux\\store.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\sliderProps.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\useClickOutside.js",[],[],"C:\\Users\\PC\\Desktop\\New folder\\metaArt\\meta-portal\\src\\utilits.js",[],[],{"ruleId":"299","severity":1,"message":"300","line":24,"column":19,"nodeType":"301","endLine":24,"endColumn":74},{"ruleId":"299","severity":1,"message":"300","line":33,"column":23,"nodeType":"301","endLine":33,"endColumn":60},{"ruleId":"299","severity":1,"message":"300","line":60,"column":23,"nodeType":"301","endLine":60,"endColumn":60},{"ruleId":"299","severity":1,"message":"300","line":89,"column":23,"nodeType":"301","endLine":89,"endColumn":60},{"ruleId":"299","severity":1,"message":"300","line":116,"column":23,"nodeType":"301","endLine":116,"endColumn":60},{"ruleId":"302","severity":1,"message":"303","line":10,"column":6,"nodeType":"304","endLine":10,"endColumn":8,"suggestions":"305"},{"ruleId":"299","severity":1,"message":"300","line":47,"column":31,"nodeType":"301","endLine":47,"endColumn":61},{"ruleId":"302","severity":1,"message":"306","line":14,"column":6,"nodeType":"304","endLine":14,"endColumn":10,"suggestions":"307"},{"ruleId":"302","severity":1,"message":"308","line":26,"column":6,"nodeType":"304","endLine":26,"endColumn":12,"suggestions":"309"},{"ruleId":"299","severity":1,"message":"300","line":50,"column":19,"nodeType":"301","endLine":50,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":60,"column":23,"nodeType":"301","endLine":64,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":69,"column":23,"nodeType":"301","endLine":73,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":78,"column":23,"nodeType":"301","endLine":82,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":87,"column":23,"nodeType":"301","endLine":91,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":96,"column":23,"nodeType":"301","endLine":100,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":151,"column":23,"nodeType":"301","endLine":151,"endColumn":80},{"ruleId":"299","severity":1,"message":"300","line":156,"column":23,"nodeType":"301","endLine":156,"endColumn":79},{"ruleId":"299","severity":1,"message":"300","line":276,"column":25,"nodeType":"301","endLine":280,"endColumn":27},{"ruleId":"299","severity":1,"message":"300","line":289,"column":25,"nodeType":"301","endLine":293,"endColumn":27},{"ruleId":"299","severity":1,"message":"300","line":398,"column":31,"nodeType":"301","endLine":398,"endColumn":61},{"ruleId":"310","severity":1,"message":"311","line":16,"column":9,"nodeType":"301","endLine":19,"endColumn":11},{"ruleId":"312","severity":1,"message":"313","line":22,"column":9,"nodeType":"301","endLine":26,"endColumn":11},{"ruleId":"312","severity":1,"message":"313","line":27,"column":9,"nodeType":"301","endLine":27,"endColumn":80},{"ruleId":"299","severity":1,"message":"300","line":16,"column":15,"nodeType":"301","endLine":16,"endColumn":48},{"ruleId":"299","severity":1,"message":"300","line":151,"column":9,"nodeType":"301","endLine":151,"endColumn":63},{"ruleId":"299","severity":1,"message":"300","line":59,"column":19,"nodeType":"301","endLine":59,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":71,"column":19,"nodeType":"301","endLine":71,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":83,"column":19,"nodeType":"301","endLine":83,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":95,"column":19,"nodeType":"301","endLine":95,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":109,"column":19,"nodeType":"301","endLine":109,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":121,"column":19,"nodeType":"301","endLine":121,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":133,"column":19,"nodeType":"301","endLine":133,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":145,"column":19,"nodeType":"301","endLine":145,"endColumn":52},{"ruleId":"314","severity":2,"message":"315","line":17,"column":171,"nodeType":"316","messageId":"317"},{"ruleId":"299","severity":1,"message":"300","line":66,"column":23,"nodeType":"301","endLine":66,"endColumn":80},{"ruleId":"299","severity":1,"message":"300","line":288,"column":13,"nodeType":"301","endLine":288,"endColumn":46},{"ruleId":"299","severity":1,"message":"300","line":297,"column":9,"nodeType":"301","endLine":297,"endColumn":66},{"ruleId":"299","severity":1,"message":"300","line":308,"column":19,"nodeType":"301","endLine":308,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":317,"column":19,"nodeType":"301","endLine":317,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":322,"column":21,"nodeType":"301","endLine":322,"endColumn":75},{"ruleId":"299","severity":1,"message":"300","line":331,"column":19,"nodeType":"301","endLine":331,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":339,"column":19,"nodeType":"301","endLine":339,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":347,"column":19,"nodeType":"301","endLine":347,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":355,"column":19,"nodeType":"301","endLine":355,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":367,"column":17,"nodeType":"301","endLine":367,"endColumn":71},{"ruleId":"299","severity":1,"message":"300","line":374,"column":17,"nodeType":"301","endLine":374,"endColumn":71},{"ruleId":"299","severity":1,"message":"300","line":444,"column":19,"nodeType":"301","endLine":465,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":517,"column":19,"nodeType":"301","endLine":522,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":36,"column":21,"nodeType":"301","endLine":36,"endColumn":58},{"ruleId":"299","severity":1,"message":"300","line":29,"column":15,"nodeType":"301","endLine":29,"endColumn":52},{"ruleId":"318","severity":1,"message":"319","line":29,"column":15,"nodeType":"301","endLine":29,"endColumn":52},{"ruleId":"299","severity":1,"message":"300","line":38,"column":17,"nodeType":"301","endLine":38,"endColumn":51},{"ruleId":"299","severity":1,"message":"300","line":18,"column":15,"nodeType":"301","endLine":18,"endColumn":49},{"ruleId":"299","severity":1,"message":"300","line":25,"column":15,"nodeType":"301","endLine":25,"endColumn":69},{"ruleId":"299","severity":1,"message":"300","line":63,"column":21,"nodeType":"301","endLine":67,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":72,"column":21,"nodeType":"301","endLine":76,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":81,"column":21,"nodeType":"301","endLine":85,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":90,"column":21,"nodeType":"301","endLine":94,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":99,"column":21,"nodeType":"301","endLine":103,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":13,"column":11,"nodeType":"301","endLine":13,"endColumn":65},{"ruleId":"299","severity":1,"message":"300","line":16,"column":15,"nodeType":"301","endLine":16,"endColumn":70},{"ruleId":"299","severity":1,"message":"300","line":14,"column":9,"nodeType":"301","endLine":14,"endColumn":64},{"ruleId":"299","severity":1,"message":"300","line":29,"column":21,"nodeType":"301","endLine":29,"endColumn":66},{"ruleId":"299","severity":1,"message":"300","line":38,"column":21,"nodeType":"301","endLine":38,"endColumn":66},{"ruleId":"299","severity":1,"message":"300","line":47,"column":21,"nodeType":"301","endLine":47,"endColumn":71},{"ruleId":"299","severity":1,"message":"300","line":56,"column":21,"nodeType":"301","endLine":56,"endColumn":63},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNfts'. Either include it or remove the dependency array. If 'getNfts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["320"],"React Hook useEffect has missing dependencies: 'getNfts' and 'getSingleNft'. Either include them or remove the dependency array. If 'getSingleNft' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["321"],"React Hook useEffect has a missing dependency: 'nft'. Either include it or remove the dependency array.",["322"],"@next/next/no-page-custom-font","Custom fonts not added in `pages/_document.js` will only load for a single page. This is discouraged. See: https://nextjs.org/docs/messages/no-page-custom-font","@next/next/no-css-tags","Do not include stylesheets manually. See: https://nextjs.org/docs/messages/no-css-tags","react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","JSXText","unescapedEntityAlts","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},"Update the dependencies array to be: [getNfts]",{"range":"329","text":"330"},"Update the dependencies array to be: [getNfts, getSingleNft, id]",{"range":"331","text":"332"},"Update the dependencies array to be: [nft, nfts]",{"range":"333","text":"334"},[344,346],"[getNfts]",[517,521],"[getNfts, getSingleNft, id]",[796,802],"[nft, nfts]"]